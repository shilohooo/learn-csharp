<Window
    Background="Transparent"
    BorderBrush="Transparent"
    BorderThickness="0"
    CanResize="False"
    DragDrop.AllowDrop="True"
    ExtendClientAreaChromeHints="NoChrome"
    ExtendClientAreaTitleBarHeightHint="-1"
    ExtendClientAreaToDecorationsHint="True"
    Icon="/Assets/avalonia-logo.ico"
    SystemDecorations="None"
    Title="Avalonia 页面导航示例"
    WindowStartupLocation="CenterScreen"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="Avalonia.PageNavigationSample.Views.MainWindow"
    x:DataType="vm:MainWindowViewModel"
    x:Name="Window"
    xmlns="https://github.com/avaloniaui"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Avalonia.PageNavigationSample.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs)
        -->
        <vm:DesignMainWindowViewModel />
    </Design.DataContext>

    <!--  region 布局容器  -->
    <Grid RowDefinitions="Auto, *">
        <!--  顶部  -->
        <Border
            Background="{DynamicResource HeaderBgColor}"
            BorderBrush="{DynamicResource SidebarBorderColor}"
            BorderThickness="0,0,0,1"
            DockPanel.Dock="Top"
            Grid.Row="0"
            Padding="8">
            <Grid ColumnDefinitions="Auto,*,Auto" ColumnSpacing="10">
                <!--  应用 LOGO  -->
                <StackPanel
                    Grid.Column="0"
                    Grid.Row="0"
                    VerticalAlignment="Center">
                    <Svg
                        Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                        Height="24"
                        Path="{Binding AppIcon, Converter={StaticResource SvgIconPathConverters}}"
                        ToolTip.Tip="应用 LOGO"
                        Width="24" />
                </StackPanel>
                <!--  应用名称  -->
                <TextBlock
                    DockPanel.Dock="Left"
                    FontWeight="Black"
                    Grid.Column="1"
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    Text="Avalonia Page Navigation Sample"
                    VerticalAlignment="Center" />
                <!--  缩小、最大化、退出按钮  -->
                <StackPanel
                    Grid.Column="2"
                    Grid.Row="0"
                    Orientation="Horizontal"
                    Spacing="4"
                    VerticalAlignment="Center">
                    <Button Background="Transparent" Command="{Binding MinimizeCommand}">
                        <Svg
                            Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                            Height="16"
                            Path="{Binding MinimizeButtonIcon, Converter={StaticResource SvgIconPathConverters}}"
                            Width="16" />
                    </Button>
                    <Button Background="Transparent" Command="{Binding MaximizeCommand}">
                        <Svg
                            Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                            Height="16"
                            Path="{Binding MaximizeToggleButtonIcon, Converter={StaticResource SvgIconPathConverters}}"
                            Width="16" />
                    </Button>
                    <Button Background="Transparent" Command="{Binding ExitCommand}">
                        <Svg
                            Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                            Height="16"
                            Path="{Binding ExitButtonIcon, Converter={StaticResource SvgIconPathConverters}}"
                            Width="16" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!--  主布局  -->
        <Grid ColumnDefinitions="Auto, *" Grid.Row="1">
            <Border
                Background="{DynamicResource SidebarBgColor}"
                BorderBrush="{DynamicResource SidebarBorderColor}"
                BorderThickness="0,0,1,0"
                Grid.Column="0"
                Padding="4">
                <DockPanel LastChildFill="True">
                    <!--  二级导航折叠按钮  -->
                    <Button
                        Background="Transparent"
                        Command="{Binding ToggleSidebarCommand}"
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Center">
                        <Svg
                            Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                            Height="24"
                            Path="{Binding SidebarToggleButtonIcon, Converter={StaticResource SvgIconPathConverters}}"
                            Width="24" />
                    </Button>

                    <!--  底部工具栏  -->
                    <ToggleButton
                        DockPanel.Dock="Bottom"
                        HorizontalAlignment="Center"
                        IsChecked="{Binding IsDarkMode}">
                        <ToggleButton.Styles>
                            <Style Selector="ToggleButton:checked /template/ ContentPresenter">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style Selector="ToggleButton:unchecked /template/ ContentPresenter">
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                            <Style Selector="ToggleButton:pointerover /template/ ContentPresenter">
                                <Setter Property="Background" Value="{DynamicResource ThemeSwitchButtonHoverBgColor}" />
                            </Style>
                        </ToggleButton.Styles>
                        <Svg
                            Css="{Binding IsDarkMode, Converter={StaticResource SvgColorConverter}}"
                            Height="24"
                            Path="{Binding ThemeToggleButtonIcon, Converter={StaticResource SvgIconPathConverters}}"
                            Width="24" />
                    </ToggleButton>
                    <!--  TODO - 使用 Flyout 切换主题和退出应用  -->
                    <!-- <Button Content="Setting" HorizontalAlignment="Center"> -->
                    <!--     <Button.Flyout> -->
                    <!--         <MenuFlyout HorizontalOffset="10" Placement="RightEdgeAlignedBottom"> -->
                    <!--             <MenuItem Header="主题"> -->
                    <!--                 <MenuItem Header="亮色主题" /> -->
                    <!--                 <MenuItem Header="深色主题" /> -->
                    <!--             </MenuItem> -->
                    <!--             <MenuItem Header="-" /> -->
                    <!--             <MenuItem Header="退出" /> -->
                    <!--         </MenuFlyout> -->
                    <!--     </Button.Flyout> -->
                    <!-- </Button> -->

                    <!--  侧边一级导航  -->
                    <ItemsControl
                        Background="Transparent"
                        ItemsSource="{Binding Menus}"
                        Margin="0,10,0,10">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button
                                    Background="Transparent"
                                    Margin="0,0,0,8"
                                    Padding="16,4">
                                    <StackPanel>
                                        <Svg
                                            Css="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).IsDarkMode, Converter={StaticResource SvgColorConverter}, FallbackValue=path { fill: #FFFFFF }}"
                                            Height="24"
                                            Path="{Binding Icon, Converter={StaticResource SvgIconPathConverters}}"
                                            Width="24" />
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            Margin="0,4,0,0"
                                            Text="{Binding Title}" />
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DockPanel>
            </Border>

            <SplitView
                CompactPaneLength="0"
                DisplayMode="CompactInline"
                Grid.Column="1"
                IsPaneOpen="{Binding IsSidebarOpened}"
                OpenPaneLength="200"
                x:Name="LayoutSplitView">
                <!--  region 侧边二级导航  -->
                <SplitView.Pane>
                    <Border
                        Background="{DynamicResource SidebarBgColor}"
                        BorderBrush="{DynamicResource SidebarBorderColor}"
                        BorderThickness="0,0,1,0"
                        Padding="8">
                        <StackPanel Spacing="10">
                            <TextBox Watermark="搜索菜单..." />
                            <TextBlock Text="二级导航区域" />
                        </StackPanel>
                    </Border>
                </SplitView.Pane>
                <!--  endregion  -->

                <!--  region 内容区域  -->
                <Border Background="{DynamicResource ContentBgColor}" Padding="12">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <TransitioningContentControl Content="{Binding CurrentViewModel}" />
                    </ScrollViewer>
                </Border>
                <!--  endregion  -->
            </SplitView>
        </Grid>
    </Grid>
    <!--  endregion  -->
</Window>