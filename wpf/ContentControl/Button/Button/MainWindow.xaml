<Window x:Class="Button.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid Background="White">
        <!-- 
            x:Name="Button"：在这里的x表示一个命令空间，也就是xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"，
            Name 指的是这个控件的名称。请注意，由于Button继承了FrameworkElement类，而FrameworkElement类也有一个Name属性，
            但是这里设置的x:Name="_button"并不是引用了FrameworkElement类的Name属性，
            而是指在xaml中为Button定义了一个叫“_button"的名称，并把这个“Button"映射到了Button的Name属性上，
            以便于我们在后端可以通过”_button“去引用这个按钮。
            也就是说，如果某个控件本身也有一个Name属性，那么前端的x:Name就赋值给控件Name属性。
            
            Click是一个事件，但不是Button的事件，而是它的基类ButtonBase的事件，事件和委托概念关系密切，
            因为要订阅一个事件，需要写一个回调函数，而这个回调函数的签名要和这个事件的声明委托签名保持一致。
            
            IsDefault：这个属性是Button自身的属性，这里设置为true，表示这个button是一个默认按钮，启动程序后，直接按回车键，
            就相当于用鼠标点击了按钮，最终执行了回调函数里面的代码。
         -->
        <Button
            x:Name="Button"
            Content="Click Me"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            IsDefault="True" />
    </Grid>
</Window>