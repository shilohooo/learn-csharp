<Window x:Class="StackPanel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!-- 
        StackPanel用于水平或垂直堆叠子元素。也就是说，StackPanel同样也有一个Children属性，
        而Children集合中的元素呈现在界面上时，只能是按水平或垂直方式布局。
        
        StackPanel提供了一些属性和方法，最常用的是Orientation枚举属性，用于设置子控件在StackPanel内部的排列方式，
        分别是水平排列（Horizontal）和垂直排列（Vertical）。默认值是垂直排列（Vertical）。
        
        当StackPanel子元素处于垂直排列时，此时子元素的宽度默认与StackPanel的宽度保持一致，
        但是子元素的高度是与其自身的高度自适应显示。
        
        当StackPanel子元素处于水平排列时，此时子元素的高度默认与StackPanel的高度保持一致，
        但是子元素的宽度是与其自身的宽度自适应显示。
        
        可以利用子控件的HorizontalAlignment属性或VerticalAlignment来设置子控件在StackPanel内部的显示位置，
        比如在垂直排列布局模式下，可以设置HorizontalAlignment属性值，Left表示显示在左则，Right显示在右则，Center则居中显示，
        Stretch表示拉伸填充显示。

        需要注意的是，由于WPF的控件布局都是采用自适应计算每个控件的位置，所以在设置了HorizontalAlignment或VerticalAlignment后，
        子控件的宽度和高度都会重新计算，主要是根据自身内容的尺寸计算。
        
        如果StackPanel内部的子控件太多，则需要配合滚动条容器ScrollViewer控件。
     -->
    <ScrollViewer>
        <StackPanel Orientation="Vertical">
            <Button Content="Button-1" Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Button Content="Button-2" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center" />
            <Button Content="Button-3" Margin="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" />
            <Button Content="Button-4" Margin="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
            <Button Content="Button-5" Margin="10" />
            <Button Content="Button-6" Margin="10" />
            <Button Content="Button-7" Margin="10" />
        </StackPanel>
    </ScrollViewer>
</Window>